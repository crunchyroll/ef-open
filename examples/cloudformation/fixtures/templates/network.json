{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "{{ENV}}-{{SERVICE}}",
  "Parameters": {
    "AvailabilityZoneAParam": {
      "Type": "String"
    },
    "VPCSubnetBlockAParam": {
      "Type": "String"
    },
    "AvailabilityZoneBParam": {
      "Type": "String",
      "Default": ""
    },
    "VPCSubnetBlockBParam": {
      "Type": "String",
      "Default": ""
    }
  },
  "Conditions": {
    "IsPeerConnection": {
      "Fn::Not": [{
        "Fn::Or": [
          { "Fn::Equals": [ "{{ENV}}", "global" ] },
          { "Fn::Equals": [ "{{ENV}}", "mgmt" ] },
          { "Fn::Equals": [ "{{ENV}}", "prod" ] }
        ]
      }]
    },
    "EnvIsNotMgmt": {
      "Fn::Not": [
        { "Fn::Equals": [ "{{ENV}}", "mgmt" ] }
      ]
    }
  },
  "Resources": {
    "SubnetA": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": "{{aws:ec2:vpc/vpc-id,vpc-{{ENV}}}}",
        "CidrBlock": { "Ref": "VPCSubnetBlockAParam" },
        "AvailabilityZone": { "Ref": "AvailabilityZoneAParam" },
        "Tags": [ {
          "Key": "Name", "Value": "subnet-{{ENV}}-a"
        }]
      }
    },
    "SubnetB": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": "{{aws:ec2:vpc/vpc-id,vpc-{{ENV}}}}",
        "CidrBlock": { "Ref": "VPCSubnetBlockBParam" },
        "AvailabilityZone": { "Ref": "AvailabilityZoneBParam" },
        "Tags": [ {
          "Key": "Name", "Value": "subnet-{{ENV}}-b"
        }]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [ {
          "Key": "Name", "Value": "igw-{{ENV}}"
        }]
      }
    },
    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": "{{aws:ec2:vpc/vpc-id,vpc-{{ENV}}}}",
        "InternetGatewayId": { "Ref": "InternetGateway" }
      }
    },
    "AddGatewayToRouteTable": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": { "Ref": "InternetGateway" },
        "RouteTableId": "{{aws:ec2:route-table/main-route-table-id,vpc-{{ENV}}}}"
      }
    },
    "AddRouteTableToSubnetA": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": "{{aws:ec2:route-table/main-route-table-id,vpc-{{ENV}}}}",
        "SubnetId": { "Ref": "SubnetA" }
      }
    },
    "AddRouteTableToSubnetB": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": "{{aws:ec2:route-table/main-route-table-id,vpc-{{ENV}}}}",
        "SubnetId": { "Ref": "SubnetB" }
      }
    },
    "VPCPeeringConnection": {
      "Condition": "IsPeerConnection",
      "Type": "AWS::EC2::VPCPeeringConnection",
      "Properties": {
        "VpcId": "{{aws:ec2:vpc/vpc-id,vpc-{{ENV}}}}",
        "PeerVpcId": "{{aws:ec2:vpc/vpc-id,vpc-mgmt}}"
      }
    },
    "VPCPeeringRoute": {
      "Condition": "IsPeerConnection",
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "{{aws:ec2:vpc/cidrblock,vpc-mgmt}}",
        "RouteTableId": "{{aws:ec2:route-table/main-route-table-id,vpc-{{ENV}}}}",
        "VpcPeeringConnectionId": { "Ref": "VPCPeeringConnection" }
      }
    },
    "VPCPeeringRouteGlobal": {
      "Condition": "IsPeerConnection",
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "{{aws:ec2:vpc/cidrblock,vpc-{{ENV}}}}",
        "RouteTableId": "{{aws:ec2:route-table/main-route-table-id,vpc-mgmt}}",
        "VpcPeeringConnectionId": { "Ref": "VPCPeeringConnection" }
      }
    },
    "S3VpcEndpoint": {
      "Condition": "EnvIsNotMgmt",
      "Type": "AWS::EC2::VPCEndpoint",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "sid1",
              "Action": [
                "s3:*"
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Principal": "*"
            }
          ]
        },
        "RouteTableIds": [ "{{aws:ec2:route-table/main-route-table-id,vpc-{{ENV}}}}" ],
        "ServiceName": "com.amazonaws.{{REGION}}.s3",
        "VpcId": "{{aws:ec2:vpc/vpc-id,vpc-{{ENV}}}}"
      }
    }
  }
}
